{"ast":null,"code":"var _jsxFileName = \"C:\\\\lumel works\\\\newsnakeladder\\\\snakeandladdergame\\\\src\\\\DICEFUNCTIONS\\\\dice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport boxArr from '../BOXARRAY/boxarry';\nimport './dice.css';\nimport Props from '../Props';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet refClickCount = 0;\nexport default function Dice() {\n  _s();\n  const [diceRoll, setDiceRoll] = useState(\"start\");\n  const [player1Position, setPlayer1Position] = useState(1);\n  let player1Place = 1;\n  let player2Place = 1;\n  function dicerollfunction() {\n    let diceRandom = Math.floor(Math.random() * 6) + 1;\n    if (player1Place + diceRandom <= 100 && player2Place + diceRandom <= 100) {\n      refClickCount += 1;\n      if (refClickCount % 2 === 1) {\n        console.log(\"player1\", diceRandom, refClickCount);\n        setDiceRoll(\"PLAYER-1ðŸ’ ROLL DICE\");\n        //  boxArr.forEach(ids=>{\n        //   // console.log( ids.id)\n        //   console.log('id')\n        //   if(ids.id===(player1Position+diceRandom)){\n        //     console.log('done')\n        //     console.log(player1Position+diceRandom)\n        //     console.log(ids)\n        //     console.log(\"hello\")\n        //     ids.players.Player1='in'\n        //              }\n\n        //  });\n        boxArr.forEach(element => {\n          if (element.id === player1Position + diceRandom) {\n            ele;\n            setPlayer1Position(player1Position + diceRandom);\n          }\n        });\n        //  console.log(playerdice,\"id\")\n      } else if (refClickCount % 2 === 0) {\n        console.log(\"player2\", diceRandom, refClickCount);\n        return setDiceRoll(\"PLAYER-2ðŸ”˜ROLL DICE\");\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playersRollDice\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: diceRoll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"dicerollbutton\",\n      onClick: dicerollfunction,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boardsgrid\",\n      children: boxArr.map(ele => /*#__PURE__*/_jsxDEV(Props, {\n        array: boxArr.players,\n        id: ele.id,\n        className: ele.className,\n        cellNUM: ele.cellNUM\n      }, ele.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }, this))\n      // boxArr.map(ele=><Props id={ele.id}/>)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Dice, \"JNe88E8U/e1uqBTPbmtqo2LQy60=\");\n_c = Dice;\nvar _c;\n$RefreshReg$(_c, \"Dice\");","map":{"version":3,"names":["React","useState","boxArr","Props","refClickCount","Dice","diceRoll","setDiceRoll","player1Position","setPlayer1Position","player1Place","player2Place","dicerollfunction","diceRandom","Math","floor","random","console","log","forEach","element","id","ele","map","players","className","cellNUM"],"sources":["C:/lumel works/newsnakeladder/snakeandladdergame/src/DICEFUNCTIONS/dice.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport boxArr from '../BOXARRAY/boxarry'\r\nimport './dice.css'\r\nimport Props from '../Props'\r\n\r\n\r\n\r\n\r\nlet refClickCount =0\r\nexport default function Dice() {\r\n    const[diceRoll,setDiceRoll]=useState(\"start\")\r\n    const[player1Position,setPlayer1Position]=useState(1)\r\n    let player1Place = 1\r\n    let player2Place = 1\r\n\r\n\r\n    function dicerollfunction(){\r\n        let diceRandom = (Math.floor(Math.random() * 6) + 1)\r\n        if ((player1Place+diceRandom) <= 100 && (player2Place +diceRandom)<= 100 ) {\r\n        refClickCount+=1  \r\n        if(refClickCount%2===1){\r\n            console.log(\"player1\", diceRandom,refClickCount)\r\n            setDiceRoll(\"PLAYER-1ðŸ’ ROLL DICE\")\r\n          //  boxArr.forEach(ids=>{\r\n          //   // console.log( ids.id)\r\n          //   console.log('id')\r\n          //   if(ids.id===(player1Position+diceRandom)){\r\n          //     console.log('done')\r\n          //     console.log(player1Position+diceRandom)\r\n          //     console.log(ids)\r\n          //     console.log(\"hello\")\r\n          //     ids.players.Player1='in'\r\n          //              }\r\n          \r\n          //  });\r\n          boxArr.forEach(element => {\r\n            if(element.id===player1Position+diceRandom){\r\n              ele\r\n              setPlayer1Position(player1Position+diceRandom)\r\n            }\r\n          });\r\n          //  console.log(playerdice,\"id\")\r\n          \r\n            \r\n        }\r\n        else if(refClickCount%2===0){\r\n            console.log(\"player2\", diceRandom,refClickCount)\r\n            return setDiceRoll(\"PLAYER-2ðŸ”˜ROLL DICE\")\r\n        }\r\n\r\n    }}\r\n    \r\n    \r\n  return (\r\n    <div className='playersRollDice'>\r\n    <h1>{diceRoll}</h1>\r\n    <button id='dicerollbutton' onClick={dicerollfunction}>click</button>\r\n    <div className='boardsgrid'>\r\n            {\r\n                boxArr.map(ele=><Props array={boxArr.players} key={ele.id} id = {ele.id} className = {ele.className} cellNUM ={ele.cellNUM} />)\r\n                // boxArr.map(ele=><Props id={ele.id}/>)\r\n}\r\n            \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,UAAU;AAAA;AAK5B,IAAIC,aAAa,GAAE,CAAC;AACpB,eAAe,SAASC,IAAI,GAAG;EAAA;EAC3B,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACN,QAAQ,CAAC,OAAO,CAAC;EAC7C,MAAK,CAACO,eAAe,EAACC,kBAAkB,CAAC,GAACR,QAAQ,CAAC,CAAC,CAAC;EACrD,IAAIS,YAAY,GAAG,CAAC;EACpB,IAAIC,YAAY,GAAG,CAAC;EAGpB,SAASC,gBAAgB,GAAE;IACvB,IAAIC,UAAU,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAE;IACpD,IAAKN,YAAY,GAACG,UAAU,IAAK,GAAG,IAAKF,YAAY,GAAEE,UAAU,IAAI,GAAG,EAAG;MAC3ET,aAAa,IAAE,CAAC;MAChB,IAAGA,aAAa,GAAC,CAAC,KAAG,CAAC,EAAC;QACnBa,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEL,UAAU,EAACT,aAAa,CAAC;QAChDG,WAAW,CAAC,qBAAqB,CAAC;QACpC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACAL,MAAM,CAACiB,OAAO,CAACC,OAAO,IAAI;UACxB,IAAGA,OAAO,CAACC,EAAE,KAAGb,eAAe,GAACK,UAAU,EAAC;YACzCS,GAAG;YACHb,kBAAkB,CAACD,eAAe,GAACK,UAAU,CAAC;UAChD;QACF,CAAC,CAAC;QACF;MAGF,CAAC,MACI,IAAGT,aAAa,GAAC,CAAC,KAAG,CAAC,EAAC;QACxBa,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEL,UAAU,EAACT,aAAa,CAAC;QAChD,OAAOG,WAAW,CAAC,qBAAqB,CAAC;MAC7C;IAEJ;EAAC;EAGH,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,wBAChC;MAAA,UAAKD;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM,eACnB;MAAQ,EAAE,EAAC,gBAAgB;MAAC,OAAO,EAAEM,gBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eACrE;MAAK,SAAS,EAAC,YAAY;MAAA,UAEfV,MAAM,CAACqB,GAAG,CAACD,GAAG,iBAAE,QAAC,KAAK;QAAC,KAAK,EAAEpB,MAAM,CAACsB,OAAQ;QAAc,EAAE,EAAIF,GAAG,CAACD,EAAG;QAAC,SAAS,EAAIC,GAAG,CAACG,SAAU;QAAC,OAAO,EAAGH,GAAG,CAACI;MAAQ,GAAxEJ,GAAG,CAACD,EAAE;QAAA;QAAA;QAAA;MAAA,QAAqE;MAC9H;IAAA;MAAA;MAAA;MAAA;IAAA,QAGF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAzDuBhB,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}