{"ast":null,"code":"var _jsxFileName = \"C:\\\\lumel works\\\\newsnakeladder\\\\snakeandladdergame\\\\src\\\\DICEFUNCTIONS\\\\dice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport boxArr from '../BOXARRAY/boxarry';\nimport GameTitle from '../assects/snl-logo.75a58625.png';\nimport './dice.css';\nimport Props from '../Props';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet refClickCount = 0;\nexport default function Dice() {\n  _s();\n  const [diceRoll, setDiceRoll] = useState(\"start\");\n  const [player1Position, setPlayer1Position] = useState(1);\n  const [player2Position, setPlayer2Position] = useState(1);\n  const [playerswinner, setPlayerwinner] = useState();\n  const [randomdice, setrandomdice] = useState(1);\n  const [player1currentposition, setplayercurrentposition] = useState(1);\n  const [player2currentposition, setplayer2currentposition] = useState(1);\n  // const [playerturn, setPlayerturn] = useState(\"CLICK\")\n\n  function dicerollfunction() {\n    let diceRandom = Math.floor(Math.random() * 6) + 1;\n    if (player1Position + diceRandom <= 100 && player2Position + diceRandom <= 100) {\n      refClickCount += 1;\n      if (refClickCount % 2 === 1) {\n        console.log(\"player1\", diceRandom, refClickCount);\n        // setPlayerturn(\"PLAYER 1 TURN\")\n        setDiceRoll(\"PLAYER-1ðŸ’ ROLL DICE\");\n        setPlayer1Position(player1Position + diceRandom);\n        setplayercurrentposition(player1Position + diceRandom);\n        setrandomdice(diceRandom);\n        boxArr.forEach(elements => {\n          elements.players.Player1 = '';\n        });\n        boxArr.forEach(ids => {\n          if (ids.id === `boxId${player1Position + diceRandom}`) {\n            ids.players.Player1 = 'in';\n            // console.log(ids)\n          }\n        });\n      } else if (refClickCount % 2 === 0) {\n        console.log(\"player2\", diceRandom, refClickCount);\n        // setPlayerturn(\"PLAYER 2 TURN\")\n        setDiceRoll(\"PLAYER-2ðŸ”˜ROLL DICE\");\n        setPlayer2Position(player2Position + diceRandom);\n        setplayer2currentposition(player2Position + diceRandom);\n        setrandomdice(diceRandom);\n        boxArr.forEach(elements => {\n          elements.players.Player2 = '';\n        });\n        boxArr.forEach(ids => {\n          if (ids.id === `boxId${player2Position + diceRandom}`) {\n            ids.players.Player2 = 'in';\n            // console.log(ids)\n          }\n        });\n      }\n    } else {\n      console.log('got limit');\n    }\n    if (player1Position === 100) {\n      setPlayerwinner(\"player1winner\");\n      // document.getElementById(\"winners\").innerHTML = \"player1winner\"\n      console.log('player 1 winner');\n    } else if (player2Position === 100) {\n      setPlayerwinner(\"player2winner\");\n      // document.getElementById(\"winners\").innerHTML = \"player2winner\"\n      console.log('player 2 winner');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bodysmain\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playersRollDice\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sprate\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidenav\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"gametitleid\",\n            src: GameTitle,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"diceroll\",\n              children: diceRoll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dicerandoms\",\n                children: randomdice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"dicerollbutton\",\n              onClick: dicerollfunction,\n              children: \"CLICK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"player \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"1 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 22\n              }, this), \" position \", player1currentposition]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"player \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"2 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 22\n              }, this), \" position \", player1currentposition]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"playerswinners\",\n              children: playerswinner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boardsgrid\",\n            children: boxArr.map(ele => /*#__PURE__*/_jsxDEV(Props, {\n              id: ele.id,\n              arr: ele.players,\n              className: ele.className,\n              cellNUM: ele.cellNUM\n            }, ele.from, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this))\n            // boxArr.map(ele=><Props id={ele.id}/>)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Dice, \"sVmGT1b1zCwOX6Ho0rYbz2eVD/8=\");\n_c = Dice;\nvar _c;\n$RefreshReg$(_c, \"Dice\");","map":{"version":3,"names":["React","useState","boxArr","GameTitle","Props","refClickCount","Dice","diceRoll","setDiceRoll","player1Position","setPlayer1Position","player2Position","setPlayer2Position","playerswinner","setPlayerwinner","randomdice","setrandomdice","player1currentposition","setplayercurrentposition","player2currentposition","setplayer2currentposition","dicerollfunction","diceRandom","Math","floor","random","console","log","forEach","elements","players","Player1","ids","id","Player2","map","ele","className","cellNUM","from"],"sources":["C:/lumel works/newsnakeladder/snakeandladdergame/src/DICEFUNCTIONS/dice.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport boxArr from '../BOXARRAY/boxarry'\r\nimport GameTitle from '../assects/snl-logo.75a58625.png'\r\nimport './dice.css'\r\nimport Props from '../Props'\r\n\r\n\r\n\r\nlet refClickCount = 0\r\nexport default function Dice() {\r\n  const [diceRoll, setDiceRoll] = useState(\"start\")\r\n  const [player1Position, setPlayer1Position] = useState(1)\r\n  const [player2Position, setPlayer2Position] = useState(1)\r\n  const [playerswinner, setPlayerwinner] = useState()\r\n  const [randomdice, setrandomdice] = useState(1)\r\n  const [player1currentposition, setplayercurrentposition] = useState(1)\r\n  const [player2currentposition, setplayer2currentposition] = useState(1)\r\n  // const [playerturn, setPlayerturn] = useState(\"CLICK\")\r\n  \r\n\r\n  function dicerollfunction() {\r\n    let diceRandom = (Math.floor(Math.random() * 6) + 1)\r\n    if ((player1Position + diceRandom) <= 100 && (player2Position + diceRandom) <= 100) {\r\n      refClickCount += 1\r\n\r\n\r\n      if (refClickCount % 2 === 1) {\r\n        console.log(\"player1\", diceRandom, refClickCount)\r\n        // setPlayerturn(\"PLAYER 1 TURN\")\r\n        setDiceRoll(\"PLAYER-1ðŸ’ ROLL DICE\")\r\n        setPlayer1Position(player1Position + diceRandom)\r\n        setplayercurrentposition((player1Position + diceRandom))\r\n        setrandomdice(diceRandom)\r\n        boxArr.forEach(elements=>{\r\n          elements.players.Player1=''\r\n        })\r\n         boxArr.forEach((ids) => {\r\n          if (ids.id === `boxId${(player1Position + diceRandom)}`) {\r\n            ids.players.Player1 = 'in'\r\n            // console.log(ids)\r\n\r\n          }\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n      }\r\n      else if (refClickCount % 2 === 0) {\r\n        console.log(\"player2\", diceRandom, refClickCount)\r\n        // setPlayerturn(\"PLAYER 2 TURN\")\r\n        setDiceRoll(\"PLAYER-2ðŸ”˜ROLL DICE\")\r\n        setPlayer2Position(player2Position + diceRandom)\r\n        setplayer2currentposition(player2Position + diceRandom)\r\n        setrandomdice(diceRandom)\r\n        boxArr.forEach(elements=>{\r\n          elements.players.Player2=''\r\n        })\r\n\r\n        boxArr.forEach((ids) => {\r\n          if (ids.id === `boxId${(player2Position + diceRandom)}`) {\r\n            ids.players.Player2 = 'in'\r\n            // console.log(ids)\r\n\r\n          }\r\n        })\r\n      }\r\n    \r\n\r\n    }\r\n    else{\r\n      console.log('got limit')\r\n    }\r\n    if((player1Position)===100){\r\n      setPlayerwinner(\"player1winner\")\r\n      // document.getElementById(\"winners\").innerHTML = \"player1winner\"\r\n      console.log('player 1 winner')\r\n    }\r\n    else if((player2Position)===100){\r\n      setPlayerwinner(\"player2winner\")\r\n      // document.getElementById(\"winners\").innerHTML = \"player2winner\"\r\n      console.log('player 2 winner')\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"bodysmain\">\r\n    <div className='playersRollDice'>\r\n      <div className=\"sprate\">\r\n      <div className=\"sidenav\">\r\n      \r\n            <img id='gametitleid' src={GameTitle} alt=\"\" />\r\n            <div className=\"main2\">\r\n          <h1 className='diceroll'>{diceRoll}</h1>\r\n          <h1 ><span className='dicerandoms'>{randomdice}</span></h1>\r\n          <button id='dicerollbutton' onClick={dicerollfunction}>CLICK</button>\r\n          {/* <h1>{diceRandom}</h1> */}\r\n          <h1>player <span>1 </span> position {player1currentposition}</h1>\r\n          \r\n          <h1>player <span>2 </span> position {player1currentposition}</h1>\r\n          <h1 className='playerswinners' >{playerswinner}</h1>\r\n        </div>\r\n\r\n\r\n            </div>\r\n        \r\n        <div className=\"main1\">\r\n          <div className='boardsgrid'>\r\n            {\r\n              boxArr.map(ele => <Props key={ele.from} id={ele.id} arr={ele.players} className={ele.className} cellNUM={ele.cellNUM} />)\r\n              // boxArr.map(ele=><Props id={ele.id}/>)\r\n            }\r\n          </div>\r\n        </div>\r\n        \r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}