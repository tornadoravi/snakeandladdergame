{"ast":null,"code":"var _jsxFileName = \"C:\\\\lumel works\\\\newsnakeladder\\\\snakeandladdergame\\\\src\\\\GAMEBOARD\\\\gameboard.js\";\nimport React from 'react';\nimport './gameboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gameboard() {\n  let boxArr = [];\n  let row = 10;\n  let coloum = 10;\n  let addOrEven = 0;\n  for (let boardCell = row * coloum; boardCell > 0; boardCell -= row) {\n    if (addOrEven++ % 2 === 0) {\n      for (let i = boardCell; i >= boardCell - (coloum - 1); i--) {\n        boxArr.push({\n          id: `boxId${i}`,\n          className: `boxscell${i}`,\n          cellNUM: i,\n          splCel: ''\n        });\n      }\n    } else {\n      for (let j = boardCell - (coloum - 1); j <= boardCell; j++) {\n        boxArr.push({\n          id: `boxId${j}`,\n          className: ` boxs cell${j}`,\n          cellNUM: j,\n          splCel: ''\n        });\n      }\n    }\n  }\n  console.log(boxArr);\n  function BoardProp(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.className,\n      id: props.id,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.cellNUM\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boardsgrid\",\n    children: boxArr.map(ele => {\n      return /*#__PURE__*/_jsxDEV(BoardProp, {\n        id: ele.id,\n        className: ele.className,\n        cellNUM: ele.cellNUM\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_c = Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["React","Gameboard","boxArr","row","coloum","addOrEven","boardCell","i","push","id","className","cellNUM","splCel","j","console","log","BoardProp","props","map","ele"],"sources":["C:/lumel works/newsnakeladder/snakeandladdergame/src/GAMEBOARD/gameboard.js"],"sourcesContent":["import React from 'react'\r\nimport './gameboard.css'\r\n\r\nexport default function Gameboard() {\r\n   let boxArr=[]\r\n    let row = 10\r\n    let coloum = 10\r\n  let  addOrEven=0\r\n    for(let boardCell=(row*coloum); boardCell>0;boardCell-=row){\r\n        if((addOrEven++)%2===0){\r\n            for(let i=boardCell;i>=(boardCell-(coloum-1));i--){\r\n                boxArr.push({\r\n                    id:`boxId${i}`,\r\n                    className:`boxscell${i}`,\r\n                    cellNUM:i,\r\n                    splCel:''\r\n                }\r\n                )\r\n            }\r\n    }\r\n    else{\r\n        for(let j=(boardCell-(coloum-1));j<=boardCell;j++){\r\n            (boxArr.push({\r\n                id:`boxId${j}`,\r\n                className:` boxs cell${j}`,\r\n                cellNUM:j,\r\n                splCel:'',\r\n                \r\n            }))\r\n        }\r\n    }\r\n    }\r\n    console.log(boxArr)\r\n    \r\n    function BoardProp(props) {\r\n        return (\r\n        <div className={props.className} id= {props.id}>\r\n           \r\n            \r\n            <h1 >{props.cellNUM}</h1>\r\n\r\n\r\n            \r\n        </div>\r\n        )\r\n    }\r\n    return (\r\n\r\n        <div className='boardsgrid'>\r\n            {\r\n                boxArr.map((ele)=>{\r\n                    return <BoardProp id = {ele.id} className = {ele.className} cellNUM ={ele.cellNUM} />\r\n                })\r\n            }\r\n            \r\n        </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAA;AAExB,eAAe,SAASC,SAAS,GAAG;EACjC,IAAIC,MAAM,GAAC,EAAE;EACZ,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,MAAM,GAAG,EAAE;EACjB,IAAKC,SAAS,GAAC,CAAC;EACd,KAAI,IAAIC,SAAS,GAAEH,GAAG,GAACC,MAAO,EAAEE,SAAS,GAAC,CAAC,EAACA,SAAS,IAAEH,GAAG,EAAC;IACvD,IAAIE,SAAS,EAAE,GAAE,CAAC,KAAG,CAAC,EAAC;MACnB,KAAI,IAAIE,CAAC,GAACD,SAAS,EAACC,CAAC,IAAGD,SAAS,IAAEF,MAAM,GAAC,CAAC,CAAE,EAACG,CAAC,EAAE,EAAC;QAC9CL,MAAM,CAACM,IAAI,CAAC;UACRC,EAAE,EAAE,QAAOF,CAAE,EAAC;UACdG,SAAS,EAAE,WAAUH,CAAE,EAAC;UACxBI,OAAO,EAACJ,CAAC;UACTK,MAAM,EAAC;QACX,CAAC,CACA;MACL;IACR,CAAC,MACG;MACA,KAAI,IAAIC,CAAC,GAAEP,SAAS,IAAEF,MAAM,GAAC,CAAC,CAAE,EAACS,CAAC,IAAEP,SAAS,EAACO,CAAC,EAAE,EAAC;QAC7CX,MAAM,CAACM,IAAI,CAAC;UACTC,EAAE,EAAE,QAAOI,CAAE,EAAC;UACdH,SAAS,EAAE,aAAYG,CAAE,EAAC;UAC1BF,OAAO,EAACE,CAAC;UACTD,MAAM,EAAC;QAEX,CAAC,CAAC;MACN;IACJ;EACA;EACAE,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC;EAEnB,SAASc,SAAS,CAACC,KAAK,EAAE;IACtB,oBACA;MAAK,SAAS,EAAEA,KAAK,CAACP,SAAU;MAAC,EAAE,EAAGO,KAAK,CAACR,EAAG;MAAA,uBAG3C;QAAA,UAAMQ,KAAK,CAACN;MAAO;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QAIvB;EAEV;EACA,oBAEI;IAAK,SAAS,EAAC,YAAY;IAAA,UAEnBT,MAAM,CAACgB,GAAG,CAAEC,GAAG,IAAG;MACd,oBAAO,QAAC,SAAS;QAAC,EAAE,EAAIA,GAAG,CAACV,EAAG;QAAC,SAAS,EAAIU,GAAG,CAACT,SAAU;QAAC,OAAO,EAAGS,GAAG,CAACR;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IACzF,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAGJ;AAEd;AAAC,KAtDuBV,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}