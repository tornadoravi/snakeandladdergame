{"ast":null,"code":"var _jsxFileName = \"C:\\\\lumel works\\\\newsnakeladder\\\\snakeandladdergame\\\\src\\\\BOXARRAY\\\\boxarry.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Boxarry() {\n  let boxArr = [];\n  let row = 10;\n  let coloum = 10;\n  let addOrEven = 0;\n  for (let boardCell = row * coloum; boardCell > 0; boardCell -= row) {\n    if (addOrEven++ % 2 === 0) {\n      for (let i = boardCell; i >= boardCell - (coloum - 1); i--) {\n        boxArr.push({\n          id: `boxId${i}`,\n          className: `boxs cell${i}`,\n          cellNUM: i,\n          from: i,\n          splCel: '',\n          to: '',\n          players: {\n            Player1: '',\n            Player2: ''\n          }\n        });\n      }\n    } else {\n      for (let j = boardCell - (coloum - 1); j <= boardCell; j++) {\n        boxArr.push({\n          id: `boxId${j}`,\n          className: `boxs cell${j}`,\n          cellNUM: j,\n          from: j,\n          splCel: '',\n          to: '',\n          players: {\n            Player1: '',\n            Player2: ''\n          }\n        });\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n// export default boxArr\n_c = Boxarry;\nvar _c;\n$RefreshReg$(_c, \"Boxarry\");","map":{"version":3,"names":["React","Boxarry","boxArr","row","coloum","addOrEven","boardCell","i","push","id","className","cellNUM","from","splCel","to","players","Player1","Player2","j"],"sources":["C:/lumel works/newsnakeladder/snakeandladdergame/src/BOXARRAY/boxarry.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function Boxarry() {\r\n    let boxArr=[]\r\nlet row = 10\r\nlet coloum = 10\r\nlet  addOrEven=0\r\nfor(let boardCell=(row*coloum); boardCell>0;boardCell-=row){\r\n    if((addOrEven++)%2===0){\r\n        for(let i=boardCell;i>=(boardCell-(coloum-1));i--){\r\n            boxArr.push({\r\n                id:`boxId${i}`,\r\n                className:`boxs cell${i}`,\r\n                cellNUM:i,\r\n                from:i,\r\n                splCel:'',\r\n                to:'',\r\n                players:{Player1:'',Player2:''}\r\n            }\r\n            )\r\n        }\r\n}\r\nelse{\r\n    for(let j=(boardCell-(coloum-1));j<=boardCell;j++){\r\n        (boxArr.push({\r\n            id:`boxId${j}`,\r\n                className:`boxs cell${j}`,\r\n                cellNUM:j,\r\n                from:j,\r\n                splCel:'',\r\n                to:'',\r\n                players:{Player1:'',Player2:''}\r\n            \r\n        }))\r\n    }\r\n}\r\n}\r\n\r\n  return (\r\n    <div> </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default boxArr"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,eAAe,SAASC,OAAO,GAAG;EAC9B,IAAIC,MAAM,GAAC,EAAE;EACjB,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,MAAM,GAAG,EAAE;EACf,IAAKC,SAAS,GAAC,CAAC;EAChB,KAAI,IAAIC,SAAS,GAAEH,GAAG,GAACC,MAAO,EAAEE,SAAS,GAAC,CAAC,EAACA,SAAS,IAAEH,GAAG,EAAC;IACvD,IAAIE,SAAS,EAAE,GAAE,CAAC,KAAG,CAAC,EAAC;MACnB,KAAI,IAAIE,CAAC,GAACD,SAAS,EAACC,CAAC,IAAGD,SAAS,IAAEF,MAAM,GAAC,CAAC,CAAE,EAACG,CAAC,EAAE,EAAC;QAC9CL,MAAM,CAACM,IAAI,CAAC;UACRC,EAAE,EAAE,QAAOF,CAAE,EAAC;UACdG,SAAS,EAAE,YAAWH,CAAE,EAAC;UACzBI,OAAO,EAACJ,CAAC;UACTK,IAAI,EAACL,CAAC;UACNM,MAAM,EAAC,EAAE;UACTC,EAAE,EAAC,EAAE;UACLC,OAAO,EAAC;YAACC,OAAO,EAAC,EAAE;YAACC,OAAO,EAAC;UAAE;QAClC,CAAC,CACA;MACL;IACR,CAAC,MACG;MACA,KAAI,IAAIC,CAAC,GAAEZ,SAAS,IAAEF,MAAM,GAAC,CAAC,CAAE,EAACc,CAAC,IAAEZ,SAAS,EAACY,CAAC,EAAE,EAAC;QAC7ChB,MAAM,CAACM,IAAI,CAAC;UACTC,EAAE,EAAE,QAAOS,CAAE,EAAC;UACVR,SAAS,EAAE,YAAWQ,CAAE,EAAC;UACzBP,OAAO,EAACO,CAAC;UACTN,IAAI,EAACM,CAAC;UACNL,MAAM,EAAC,EAAE;UACTC,EAAE,EAAC,EAAE;UACLC,OAAO,EAAC;YAACC,OAAO,EAAC,EAAE;YAACC,OAAO,EAAC;UAAE;QAEtC,CAAC,CAAC;MACN;IACJ;EACA;EAEE,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAY;AAEhB;;AAOA;AAAA,KA9CwBhB,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}