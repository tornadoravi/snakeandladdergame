{"ast":null,"code":"let boxArr = [];\nlet row = 10;\nlet coloum = 10;\nlet addOrEven = 0;\nfor (let boardCell = row * coloum; boardCell > 0; boardCell -= row) {\n  if (addOrEven++ % 2 === 0) {\n    for (let i = boardCell; i >= boardCell - (coloum - 1); i--) {\n      boxArr.push({\n        id: `boxId${i}`,\n        className: `boxs cell${i}`,\n        cellNUM: i,\n        from: i,\n        splCel: '',\n        to: '',\n        icon: '',\n        players: {\n          Player1: '',\n          Player2: ''\n        }\n      });\n    }\n  } else {\n    for (let j = boardCell - (coloum - 1); j <= boardCell; j++) {\n      boxArr.push({\n        id: `boxId${j}`,\n        className: `boxs cell${j}`,\n        cellNUM: j,\n        from: j,\n        splCel: '',\n        to: '',\n        icon: '',\n        players: {\n          Player1: '',\n          Player2: ''\n        }\n      });\n    }\n  }\n}\nconst snakeLadder = [{\n  from: 83,\n  to: 40,\n  icon: '🐍to 40'\n}, {\n  from: 17,\n  to: 5,\n  icon: '🐍to 5'\n}, {\n  from: 56,\n  to: 21,\n  icon: '🐍to 21'\n}, {\n  from: 75,\n  to: 49,\n  icon: '🐍to 49'\n}, {\n  from: 99,\n  to: 7,\n  icon: '🐍to 7'\n}, {\n  from: 9,\n  to: 22,\n  icon: '🎠to 22'\n}, {\n  from: 24,\n  to: 45,\n  icon: '🎠to 45'\n}, {\n  from: 36,\n  to: 80,\n  icon: '🎠to 80'\n}, {\n  from: 70,\n  to: 49,\n  icon: '🎠to 90'\n}, {\n  from: 44,\n  to: 73,\n  icon: '🎠to 74'\n}];\nsnakeLadder.forEach(snakeLaelement => {\n  boxArr.forEach(element1 => {\n    if (element1.cellNUM === element.from) {\n      element1.icon = element.icon;\n      element1.to = element.to;\n    }\n  });\n});\n// const ladderUp=[\n//     {from:9,to:22,icon:'🎠to 22'},\n//     {from:17,to:5,icon:'🎠to 5'},\n//     {from:36,to:80,icon:'🎠to 80'},\n//     {from:70,to:49,icon:'🎠to 90'},\n//     {from:44,to:73,icon:'🎠to 74'},\n\n// ]\n\n// ladderUp.forEach(element => {\n//     boxArr.forEach(element1 => {\n//         if(element1.cellNUM===element.from){\n//             element1.icon=element.icon\n//             element1.to=element.to\n\n//         }\n//     });\n// });\n\nexport default boxArr;\n\n// {21:{from:21 to:40}}","map":{"version":3,"names":["boxArr","row","coloum","addOrEven","boardCell","i","push","id","className","cellNUM","from","splCel","to","icon","players","Player1","Player2","j","snakeLadder","forEach","snakeLaelement","element1","element"],"sources":["C:/lumel works/newsnakeladder/snakeandladdergame/src/BOXARRAY/boxarry.js"],"sourcesContent":["\r\n    let boxArr=[]\r\nlet row = 10\r\nlet coloum = 10\r\nlet  addOrEven=0\r\nfor(let boardCell=(row*coloum); boardCell>0;boardCell-=row){\r\n    if((addOrEven++)%2===0){\r\n        for(let i=boardCell;i>=(boardCell-(coloum-1));i--){\r\n            boxArr.push({\r\n                id:`boxId${i}`,\r\n                className:`boxs cell${i}`,\r\n                cellNUM:i,\r\n                from:i,\r\n                splCel:'',\r\n                to:'',\r\n                icon:'',\r\n                players:{Player1:'',Player2:''}\r\n            }\r\n            )\r\n        }\r\n}\r\nelse{\r\n    for(let j=(boardCell-(coloum-1));j<=boardCell;j++){\r\n        (boxArr.push({\r\n            id:`boxId${j}`,\r\n                className:`boxs cell${j}`,\r\n                cellNUM:j,\r\n                from:j,\r\n                splCel:'',\r\n                to:'',\r\n                icon:'',\r\n                players:{Player1:'',Player2:''}\r\n            \r\n        }))\r\n    }\r\n}\r\n}\r\nconst snakeLadder=[\r\n    {from:83,to:40,icon:'🐍to 40'},\r\n    {from:17,to:5,icon:'🐍to 5'},\r\n    {from:56,to:21,icon:'🐍to 21'},\r\n    {from:75,to:49,icon:'🐍to 49'},\r\n    {from:99,to:7,icon:'🐍to 7'},\r\n    {from:9,to:22,icon:'🎠to 22'},\r\n    {from:24,to:45,icon:'🎠to 45'},\r\n    {from:36,to:80,icon:'🎠to 80'},\r\n    {from:70,to:49,icon:'🎠to 90'},\r\n    {from:44,to:73,icon:'🎠to 74'},\r\n\r\n]\r\n\r\nsnakeLadder.forEach(snakeLaelement => {\r\n    boxArr.forEach(element1 => {\r\n        if(element1.cellNUM===element.from){\r\n            element1.icon=element.icon\r\n            element1.to=element.to\r\n        }\r\n    });\r\n});\r\n// const ladderUp=[\r\n//     {from:9,to:22,icon:'🎠to 22'},\r\n//     {from:17,to:5,icon:'🎠to 5'},\r\n//     {from:36,to:80,icon:'🎠to 80'},\r\n//     {from:70,to:49,icon:'🎠to 90'},\r\n//     {from:44,to:73,icon:'🎠to 74'},\r\n\r\n// ]\r\n\r\n// ladderUp.forEach(element => {\r\n//     boxArr.forEach(element1 => {\r\n//         if(element1.cellNUM===element.from){\r\n//             element1.icon=element.icon\r\n//             element1.to=element.to\r\n            \r\n//         }\r\n//     });\r\n// });\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default boxArr\r\n\r\n\r\n// {21:{from:21 to:40}}"],"mappings":"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"},"metadata":{},"sourceType":"module"}