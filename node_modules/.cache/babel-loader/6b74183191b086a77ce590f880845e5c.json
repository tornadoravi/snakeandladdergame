{"ast":null,"code":"var _jsxFileName = \"C:\\\\lumel works\\\\newsnakeladder\\\\snakeandladdergame\\\\src\\\\DICEFUNCTIONS\\\\dice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GameTitle from '../assects/snl-logo.75a58625.png';\nimport boxArr from '../BOXARRAY/boxarry';\nimport './dice.css';\nimport Props from '../Props';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet refClickCount = 0;\nexport default function Dice() {\n  _s();\n  const [diceRoll, setDiceRoll] = useState(\"start\");\n  const [player1Position, setPlayer1Position] = useState(1);\n  const [player2Position, setPlayer2Position] = useState(1);\n  function dicerollfunction() {\n    let diceRandom = Math.floor(Math.random() * 6) + 1;\n    if (player1Position + diceRandom <= 100 && player2Position + diceRandom <= 100) {\n      refClickCount += 1;\n      if (refClickCount % 2 === 1) {\n        console.log(\"player1\", diceRandom, refClickCount);\n        setDiceRoll(\"PLAYER-1ðŸ’ ROLL DICE\");\n        setPlayer1Position(player1Position + diceRandom);\n        boxArr.forEach(elements => {\n          elements.players.Player1 = '';\n        });\n        let f5 = boxArr.forEach(ids => {\n          if (ids.id === `boxId${player1Position + diceRandom}`) {\n            ids.players.Player1 = 'in';\n            // console.log(ids)\n          }\n        });\n      } else if (refClickCount % 2 === 0) {\n        console.log(\"player2\", diceRandom, refClickCount);\n        setDiceRoll(\"PLAYER-2ðŸ”˜ROLL DICE\");\n        setPlayer2Position(player2Position + diceRandom);\n        boxArr.forEach(elements => {\n          elements.players.Player2 = '';\n        });\n        let f5 = boxArr.forEach(ids => {\n          if (ids.id === `boxId${player2Position + diceRandom}`) {\n            ids.players.Player2 = 'in';\n            // console.log(ids)\n          }\n        });\n      }\n    } else {\n      console.log('got limit');\n    }\n    if (player1Position === 100) {\n      // document.getElementById(\"winners\").innerHTML = \"player1winner\"\n      console.log('player 1 winner');\n    } else if (player1Position === 100) {\n      // document.getElementById(\"winners\").innerHTML = \"player2winner\"\n      console.log('player 2 winner');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bodysmain\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playersRollDice\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidenav\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main1\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"gametitleid\",\n            src: GameTitle,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"diesBUTTON\",\n            children: /*#__PURE__*/_jsxDEV(Dice, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: diceRoll\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"dicerollbutton\",\n            onClick: dicerollfunction,\n            children: \"click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boardsgrid\",\n            children: boxArr.map(ele => /*#__PURE__*/_jsxDEV(Props, {\n              id: ele.id,\n              arr: ele.players,\n              className: ele.className,\n              cellNUM: ele.cellNUM\n            }, ele.from, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 35\n            }, this))\n            // boxArr.map(ele=><Props id={ele.id}/>)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Dice, \"ulpMsOtMwyI2oEA3oWoH//ZDerA=\");\n_c = Dice;\nvar _c;\n$RefreshReg$(_c, \"Dice\");","map":{"version":3,"names":["React","useState","GameTitle","boxArr","Props","refClickCount","Dice","diceRoll","setDiceRoll","player1Position","setPlayer1Position","player2Position","setPlayer2Position","dicerollfunction","diceRandom","Math","floor","random","console","log","forEach","elements","players","Player1","f5","ids","id","Player2","map","ele","className","cellNUM","from"],"sources":["C:/lumel works/newsnakeladder/snakeandladdergame/src/DICEFUNCTIONS/dice.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport GameTitle from '../assects/snl-logo.75a58625.png'\r\nimport boxArr from '../BOXARRAY/boxarry'\r\nimport './dice.css'\r\nimport Props from '../Props'\r\n\r\n\r\n\r\nlet refClickCount = 0\r\nexport default function Dice() {\r\n  const [diceRoll, setDiceRoll] = useState(\"start\")\r\n  const [player1Position, setPlayer1Position] = useState(1)\r\n  const [player2Position, setPlayer2Position] = useState(1)\r\n\r\n\r\n\r\n  function dicerollfunction() {\r\n    let diceRandom = (Math.floor(Math.random() * 6) + 1)\r\n    if ((player1Position + diceRandom) <= 100 && (player2Position + diceRandom) <= 100) {\r\n      refClickCount += 1\r\n\r\n\r\n      if (refClickCount % 2 === 1) {\r\n        console.log(\"player1\", diceRandom, refClickCount)\r\n        setDiceRoll(\"PLAYER-1ðŸ’ ROLL DICE\")\r\n        setPlayer1Position(player1Position + diceRandom)\r\n        boxArr.forEach(elements => {\r\n          elements.players.Player1 = ''\r\n        })\r\n        let f5 = boxArr.forEach((ids) => {\r\n          if (ids.id === `boxId${(player1Position + diceRandom)}`) {\r\n            ids.players.Player1 = 'in'\r\n            // console.log(ids)\r\n\r\n          }\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n      }\r\n      else if (refClickCount % 2 === 0) {\r\n        console.log(\"player2\", diceRandom, refClickCount)\r\n        setDiceRoll(\"PLAYER-2ðŸ”˜ROLL DICE\")\r\n        setPlayer2Position(player2Position + diceRandom)\r\n        boxArr.forEach(elements => {\r\n          elements.players.Player2 = ''\r\n        })\r\n\r\n        let f5 = boxArr.forEach((ids) => {\r\n          if (ids.id === `boxId${(player2Position + diceRandom)}`) {\r\n            ids.players.Player2 = 'in'\r\n            // console.log(ids)\r\n\r\n          }\r\n        })\r\n      }\r\n\r\n\r\n    }\r\n    else {\r\n      console.log('got limit')\r\n    }\r\n    if ((player1Position) === 100) {\r\n      // document.getElementById(\"winners\").innerHTML = \"player1winner\"\r\n      console.log('player 1 winner')\r\n    }\r\n    else if ((player1Position) === 100) {\r\n      // document.getElementById(\"winners\").innerHTML = \"player2winner\"\r\n      console.log('player 2 winner')\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"bodysmain\">\r\n      <div className='playersRollDice'>\r\n        <div className=\"sidenav\">\r\n          <div className=\"main1\">\r\n            <img id='gametitleid' src={GameTitle} alt=\"\" />\r\n            <div className=\"diesBUTTON\">\r\n              <Dice />\r\n            </div>\r\n            <h1>{diceRoll}</h1>\r\n            <button id='dicerollbutton' onClick={dicerollfunction}>click</button>\r\n            {/* <h1>{diceRandom}</h1> */}\r\n          </div>\r\n          <div className=\"main2\">\r\n            <div className='boardsgrid'>\r\n              {\r\n                boxArr.map(ele => <Props key={ele.from} id={ele.id} arr={ele.players} className={ele.className} cellNUM={ele.cellNUM} />)\r\n                // boxArr.map(ele=><Props id={ele.id}/>)\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}